<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bosch on Arco Research &amp; Documentation</title>
    <link>https://arcogroup.bitbucket.io/tags/bosch/</link>
    <description>Recent content in bosch on Arco Research &amp; Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Mar 2020 23:20:43 +0200</lastBuildDate><atom:link href="https://arcogroup.bitbucket.io/tags/bosch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Integrating MbientLab MetaMotionR sensors with Python</title>
      <link>https://arcogroup.bitbucket.io/shapes/integrating_metamotionr_with_python/</link>
      <pubDate>Mon, 30 Mar 2020 23:20:43 +0200</pubDate>
      
      <guid>https://arcogroup.bitbucket.io/shapes/integrating_metamotionr_with_python/</guid>
      <description>Overview MbientLab is a manufacture of different wearable devices, an example of these are the Meta sensors family, which is formed by different wearable devices like MetaTracker, MetaMotionC and MetaMotionR. The Meta family devices are formed by different sensors, like Accelerometers, Gyroscopes, Barometes, etc&amp;hellip; In this case, we are going to see how to use a Python library for the MetaMotionR, which enable the user to read the sensors of this device.</description>
    </item>
    
  </channel>
</rss>
